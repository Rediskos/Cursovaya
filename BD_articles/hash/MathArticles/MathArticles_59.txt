Протокол Нидхема  Шрёдера  ВикипедияянварьфевральмартапрельмайиюньиюльавгустсентябрьоктябрьноябрьдекабрьПротоколНидхемаШрёдераПротокол Нидхема  ШрёдераВикипедияХорошие статьи по криптографииВикипедияХорошие статьи по алфавитуСтраницы использующие волшебные ссылки Протоколы ПротоколНидхемаШрёдерарусскийПротокол Нидхема  ШрёдераМатериал из Википедии  свободной энциклопедииЭто стабильная версия отпатрулированная  марта СостояниеотпатрулированаПерейти к навигацииПерейти к поискуКриптографические обозначения используемые в протоколах проверки подлинности и обмена ключами Идентификаторы Алисы  инициатора сессии Идентификатор Боба  стороны с которой устанавливается сессия Идентификатор Трента  доверенной промежуточной стороны Открытые ключи Алисы Боба и Трента Секретные ключи Алисы Боба и Трента Шифрование данных ключом Алисы либо совместным ключом Алисы и Трента Шифрование данных ключом Боба либо совместным ключом Боба и Трента Шифрование данных секретными ключами Алисы Боба цифровая подпись Порядковый номер сессии для предотвращения атаки с повтором Случайный сеансовый ключ который будет использоваться для симметричного шифрования данных Шифрование данных временным сеансовым ключом Метки времени добавляемые в сообщения Алисой и Бобом соответственно Случайные числа  которые были выбраны Алисой и Бобом соответственноПротокол Нидхема Шрёдера общее название для симметричного и асимметричного протоколов аутентификации и обмена ключами Оба протокола были предложены Майклом Шрёдером и Роджером Нидхемом Вариант основанный на симметричном шифровании использует промежуточную доверенную сторону Этот протокол стал основой для целого класса подобных протоколов Например  является одним из вариантов симметричного протокола Нидхема Шрёдера Вариант основанный на асимметричном шифровании предназначен для взаимной аутентификации сторон В оригинальном виде оба варианта протокола являются уязвимымиСодержание История Протокол НидхемаШрёдера для аутентификации с симметричным ключом Атака на протокол НидхемаШрёдера для аутентификации с симметричным ключом Исправление уязвимости Случай разных серверов аутентификации Протокол с аутентификацией сущности Протокол НидхемаШрёдера для аутентификации с открытым ключом Криптосистемы с открытым ключом Протокол НидхемаШрёдера для аутентификации с открытым ключом Атака на протокол НидхемаШрёдера для аутентификации с открытым ключом Пример последствий Простое исправление протокола Исправление уязвимости Первый вариант Второй вариант Практическое использование Примечания Стандарты Литература СсылкиИсторияправить  править кодПротокол для аутентификации с симметричным ключом вероятно являющийся самым знаменитым протоколом аутентификации и установления ключа был сформулирован Майклом Шрёдером и Роджером Нидхемом в  году Однако он уязвим для атаки изобретенной Дороти Деннинг англ   и Джованни Марией Сакко англ   в  году Несмотря на это он стал основой для целого класса подобных протоколов В частности протокол  является одним из вариантов НидхемШрёдерпротокола аутентификации на основе доверенной третьей стороны и его модификациях предложенных Деннинг и Сакко Протокол НидхемаШрёдера для аутентификации с открытым ключом также является уязвимым В  году Лоу англ  описал возможную атаку на протоколПротокол НидхемаШрёдера для аутентификации с симметричным ключомправить  править код Протокол НидхемаШрёдера для аутентификации с симметричным ключомПри схеме шифрования с симметричным ключом предполагается что секретный ключ известен и серверу аутентификации   Трент и обоим субъектам обмена   Алиса и   Боб Изначально оба субъекта имеют секретные ключи   и   известные только им и некоторой доверенной стороне серверу аутентификации В ходе выполнения протокола Алиса и Боб получают от сервера новый секретный сессионный ключ для шифрования взаимных сообщений в данном сеансе связи то есть сообщения от Алисы к Бобу расшифровать может только Боб сообщения от Боба к Алисе расшифровать может только Алиса Кроме того субъекты обмена должны быть уверены что пришедшее сообщение было отправлено именно тем с кем должен произойти обмен Боб должен быть уверен что получил сообщение именно от Алисы и наоборот Это также обеспечивается протоколом Предположим что обмен инициирует Алиса Будем полагать что сервер аутентификации у них общий Рассмотрим реализацию протокола               Обмен начинается с того что Алиса генерирует некоторое случайное число   идентификатор использующееся один раз Первое сообщение от Алисы к Тренту содержит в себе имена участников предстоящего обмена и генерированное Алисой случайное число   Данное сообщение посылается открытым текстом но может быть зашифровано ключом Алисы     При получении этого сообщения Трент извлекает из базы данных секретные ключи Алисы и Боба   и   а также вычисляет новый сессионный ключ   Далее Трент посылает Алисе следующее сообщение   Алиса может расшифровать и прочесть сообщение от Трента Она проверяет наличие своего идентификатора   в сообщении что подтверждает то что данное сообщение является откликом на её первое сообщение Тренту Также она проверяет имя субъекта с которым собирается обмениваться данными Эта проверка обязательна так как если бы не было этого имени Злоумышленник мог бы заменить имя Боба на своё в первом сообщении и Алиса ничего не подозревая в дальнейшем бы взаимодействовала со Злоумышленником Часть сообщения Алиса прочитать не может так как эта часть зашифрована ключом Боба Алиса пересылает Бобу зашифрованный его ключом фрагмент   Расшифровать его может только Боб так как оно зашифровано его секретным ключом После расшифровки Боб тоже владеет сессионным ключом   Имя Алисы в сообщении подтверждает факт что сообщение от неё Далее при обмене данными будет использоваться сессионный ключ Чтобы сделать схему симметричной и уменьшить вероятность атаки воспроизведения Боб генерирует некоторое случайное число   идентификатор Боба и посылает Алисе следующее сообщение зашифрованное сессионным ключом   Алиса расшифрует его и посылает отклик который ожидает Боб также зашифрованный сессионным ключом   Для регулярно взаимодействующих партнёров можно сократить число сообщений до трёх убрав первые два При этом ключ будет использоваться многократноАтака на протокол НидхемаШрёдера для аутентификации с симметричным ключомправить  править код Атака на протокол НидхемаШрёдера для аутентификации с симметричным ключомПротокол НидхемаШрёдера уязвим для атаки с повторной передачей сообщения изобретённой Дороти Деннинг англ   и Джованни Марией Сакко англ   в  году В ходе атаки Злоумышленник перехватывает и заменяет сообщения из пунктов  протокола Злоумышленник перехватывает сообщение от Алисы к Бобу на третьем шаге протокола и блокирует Алису Потом заменяет актуальное сообщение Алисы на другое из старого сеанса между Алисой и Бобом Исходя из предположения об уязвимости старого сеансового ключа Злоумышленник может узнать его значение и начать обмен данными с Бобом под видом АлисыВ результате Боб думает что имеет новый сеансовый ключ с Алисой но на самом деле ключ старый и известен ЗлоумышленникуРассмотрим возможную реализацию атакиОбмен начинается так же как и в протоколе Алиса генерирует случайное число и посылает Тренту Трент извлекает из базы данных секретные ключи Алисы и Боба вычисляет новый сессионный ключ   и посылает ответ Алисе Алиса расшифровывает сообщение проверяет случайное число и имя субъекта с которым собирается обмениваться данными Отправляет сообщение Бобу         После этого в ход протокола вмешивается Злоумышленник Сначала он перехватывает сообщение Алисы Бобу потом полностью блокирует канал связи Алисы Исходя из предположения об уязвимости старого сеансового ключа Злоумышленник может узнать его значение Кроме значения старого ключа у Злоумышленника есть материал старого сеанса между Алисой и Бобом     где     старый ключ Выдавая себя за Алису он посылает Бобу сообщение со старым ключом   Боб расшифровывает сообщение и убеждается что оно от Алисы не подозревая что подвергся атаке и общается уже со Злоумышленником Он посылает Алисе своё случайное число   Злоумышленник зная значение старого ключа расшифровывает сообщение Боба Он как и положено уменьшает на единицу значение случайного числа Боба шифрует результат с помощью того же старого сессионного ключа и отправляет сообщение Бобу   В итоге Боб уверен что установил сеанс связи с Алисой так как все необходимые шаги протокола были проделаны верно и все сообщения оказались корректныЭта атака порождает более серьёзную опасность отсутствие реальной связи между партнёрами Злоумышленник не обязан ждать когда Алиса запустит протокол Поскольку он знает старый сеансовый ключ   он может сам начать атаку начав протокол с этапа  Боб будет думать что установил контакт с Алисой в то время как Алиса вообще не выходила на связьИсправление уязвимостиправить  править кодДеннинг и Сакко предложили использовать метки времени в сообщениях для предотвращения атак подобных рассмотренной выше Обозначим такую метку буквой   Рассмотрим вариант исправления уязвимости                 Получив протокольные сообщения от Трента Алиса и Боб могут обнаружить что их послания остались без ответа проверив неравенство   где     текущее локальное время получателя    интервал представляющий допустимую разницу между временем Трента и локальным временем    ожидаемая временная задержка Отсюда они убеждаются в свежести сообщений и в частности сессионного ключа Так как временная метка зашифрована секретными ключами Алисы и Боба то в идеальной схеме шифрования имитация Трента невозможнаТакже в данной уточнённой спецификации протокола необходимость защиты целостности данных выделена явно Если сообщения которыми обмениваются участники протокола не искажались в процессе передачи то после процедуры верификации обе стороны могут быть уверены что сеансовый ключ согласован как с пользователями так и с идентификатором свежести Это должно убедить их в подлинности друг друга и в том что не используется старый сеансовый ключСлучай разных серверов аутентификацииправить  править код Случай разных серверов аутентификацииВ реальной жизни Алиса и Боб могут оказаться на достаточно большом расстоянии чтобы не существовало общего сервера аутентификации По этой причине в общем случае Алиса может иметь свой сервер аутентификации   а Боб свой   Так как и в этом случае перед Алисой стоит задача построить для Боба сообщение вида   Для его формирования будут задействованы оба сервера так как только   умеет шифровать ключом Алисы   и только   может использовать ключ Боба   При этом безопасность обмена между серверами предполагается обеспеченной Рассмотрим пример для случая двух разных серверов имеющих соединение друг с другом                     Шаги   соответствуют шагам  из описанного выше случая с общим сервером аутентификации На втором шаге сервер Алисы не найдя в списке своих клиентов Боба обращается к серверу Боба Тот знает ключ Боба и может выполнить необходимое шифрование После чего зашифрованная информация передается обратно серверу аутентификации Алисы который и посылает её АлисеПротокол с аутентификацией сущностиправить  править кодМеханизм откликаотзыва из протокола обеспечивает так называемую аутентификацию сущности    Аутентификация сущности осуществляется с помощью проверки верифицирующим пользователем некоторой криптографической операции В её ходе демонстрируется существование доказывающего пользователя которое считается подтверждённым если доказывающий пользователь выполнил некоторую криптографическую операцию после события которое другой пользователь считает последнимНа втором этапе протокола НидхемаШрёдера Алиса расшифровывает одноразовое случайное число которое сгенерировала она сама на первом этапе Это подтверждает тот факт что Трент выполнил шифрование после получения сообщения от Алисы В итоге Алиса знает что Трент существовал после этого события то есть Трент прошел аутентификацию существования по отношению к Алисе В то же время Боб участвующий в том же протоколе не может быть уверен в существовании ТрентаПротокол НидхемаШрёдера для аутентификации с открытым ключомправить  править кодКриптосистемы с открытым ключомправить  править кодВведём обозначения  открытый ключ Алисы  секретный ключ АлисыПричем секретный ключ знает только Алиса а открытый ключ известен окружающим  открытый текст  текст зашифрован открытым ключом Алисы и может быть расшифрован только Алисой с помощью её секретного ключа  текст зашифрован секретным ключом Алисы и может быть расшифрован с помощью открытого ключа АлисыЭто означает что текст   при идеальном шифровании гарантированно создан Алисой потому что данным секретным ключом владеет только она Именно поэтому зашифрованный текст   называется цифровой подписью сообщения   Его расшифровка с помощью открытого ключа называется верификацией подписи АлисыПротокол НидхемаШрёдера для аутентификации с открытым ключомправить  править код Протокол Нидхема Шрёдера для аутентификации с открытым ключомАсимметричный вариант двух ключевая схема протокола Нидхема Шрёдера Трент владеет открытыми ключами всех обслуживаемых им клиентов Алиса имеет открытый ключ   и секретный ключ   Боб   и   Трент   и   Пусть Алиса инициирует новый сеанс связи с Бобом                     Алиса инициатор протокола в первом сообщении запрашивает у Трента открытый ключ Боба   На что Трент на втором этапе протокола отвечает сообщением с открытым ключом Боба и его именем Сообщение зашифровано секретным ключом Трента то есть является его цифровой подписью Эта подпись должна убедить Алису что она получила сообщение именно от Трента Предполагается что Алиса знает открытый ключ Трента и способна расшифровать сообщение то есть верифицировать подпись   Далее Алиса генерирует случайное число   и вместе со своим именем отправляет Бобу предварительно зашифровав открытым ключом Боба   Только Боб может расшифровать данное сообщение так как для этого необходим его секретный ключ   Из сообщения он узнаёт что Алиса хочет начать обмен данными с ним Следовательно Бобу нужен открытый ключ Алисы и он делает операции аналогичные проделанным Алисой      В результате участники обмена знают открытые ключи друг друга После этого производится взаимная аутентификация с помощью генерированных случайных чисел      Нидхем и Шрёдер предложили использовать числа   и   для инициализации общего секретного ключа обеспечивающего секретную связь между Алисой и Бобом Позже Деннинг и Сакко указали что этот протокол не гарантирует что открытые ключи являются новыми а не повторами старых Эту проблему можно решить разными способами в частности используя временные метки в сообщениях с ключами Нидхем и Шрёдер также рассматривали возможность применения меток времени но отвергли эту идею изза отсутствия качественного эталона времениАтака на протокол НидхемаШрёдера для аутентификации с открытым ключомправить  править код Атака на протокол НидхемаШрёдера для аутентификации с открытым ключомАтака на протокол была предложена Лоу англ  Он разделил протокол на две части не связанные логически Первая     этапы протокола получение открытого ключа Вторая    этапы аутентификация Алисы и Боба Будем полагать что первая часть состоялась и рассмотрим вторую            Пусть Злоумышленник А лицо являющееся законным пользователем системы Он может проводить стандартные сеансы связи с остальными пользователями системы Для атаки используется одновременный запуск двух протоколов в первом Алиса проводит корректный сеанс со Злоумышленником во втором Злоумышленник выдаёт себя за Алису при общении с Бобом                        На этапе  Алиса посылает Злоумышленнику случайное число   которое Злоумышленник тут же на этапе  другого протокола пересылает Бобу Боб принимает это сообщение и на этапе  генерирует своё случайное число и отвечает по его мнению Алисе Злоумышленник не может расшифровать это сообщение поэтому он на этапе  пересылает его Алисе Алиса получает сообщение не вызывающее подозрений расшифровывает и возвращает на этапе  Злоумышленнику случайное число Боба зашифровав сообщение открытым ключом Злоумышленника Теперь Злоумышленник знает случайное число Боба и может ответить ему на этапе  Боб уверен что установил сеанс связи с Алисой так как шифровал сообщение со случайным числом её ключом и получил правильный ответКлючевой момент атаки состоит в том что Злоумышленник может заставить Алису расшифровать для него случайное число Боба Алиса в данной атаке выступает оракулом пользователем системы который выполняет некоторую криптографическую операцию в интересах ЗлоумышленникаПример последствийправить  править кодРассмотрим пример последствий данной атаки Пусть Боб это некоторый банк Тогда Злоумышленник выдав себя за Алису может воспользоваться её счетом и перевести с него деньги на свой Банк будет уверен что операция была выполнена АлисойПростое исправление протоколаправить  править кодДля предотвращения атаки описанной выше необходимо на шестом этапе добавить в сообщение имя отвечающего    В этом случае Злоумышленник не сможет переслать сообщение Алисе так как Алиса будет ждать от него соответственно следующее сообщение    которое Злоумышленник не может получить ни пересылками сообщений Боба ни собственными силамиИсправление уязвимостиправить  править кодПервый вариантправить  править код            В уточнённой спецификации   это сообщение для верификации которого необходимо использовать открытый ключ Алисы то есть это подпись Алисы В этой спецификации случайные числа сначала подписываются а потом шифруются открытым ключом другого пользователя Изза того что на этапе  Боб подписывает своё число атака Лоу становится невозможной Если Злоумышленник перешлёт сообщение Алисе то она заметит ошибку при верификацииВторой вариантправить  править кодС помощью метода зашифруй и подпиши можно уточнить следующим образом            Теперь Злоумышленник даже не в состоянии запустить протокол связи с Бобом от имени другого лицаПрактическое использованиеправить  править кодДля решения проблемы аутентификации сетевых пользователей предназначен протокол  Его основная идея заключается в использовании доверенной третьей стороны предоставляющей пользователю доступ к серверу с помощью общего сеансового ключа разделённого между пользователем и сервером В основе данного протокола лежит вариант протокола Нидхема Шрёдера с использованием временной меткиПримечанияправить  править код                        Мао  с     Семенов ЮА Мао  с    Мао  с  Мао  с  Мао  с  Мао  с  Мао  с     Мао  с     Мао  с    Мао  с  Мао  с Стандартыправить  править код                Литератураправить  править код              англ                           англ                           англ                            англ             Шнайер Б Прикладная криптография Протоколы алгоритмы исходные тексты на языке Си           М Триумф  с  экз  Венбо Мао Современная криптография теория и практика       Издательский дом Вильямс   Семенов ЮА Протокол аутентификации НидхемаШрёдера в случаях симметричной и асимметричной системы шифрованиярус Дата обращения  декабря Ссылкиправить  править код  англ Дата обращения  августа  Архивировано декабря года англ Дата обращения  ноября  Архивировано декабря года     англ Дата обращения  ноября  Архивировано декабря года Протоколы аутентификации и обмена ключамиС симметричными алгоритмами Протокол Нидхема  ШрёдераПротокол Отвея  РиисаПротокол Ньюмана  СтабблбайнаС симметричными и асимметричными алгоритмамиПротокол Деннинга  СаккоПротокол Ву  ЛамаПротоколы и сервисы используемые в   Эта статья входит в число хороших статей русскоязычного раздела ВикипедииИсточник  ПротоколНидхемаШрёдераКатегория Протоколы Скрытые категории ВикипедияХорошие статьи по криптографииВикипедияХорошие статьи по алфавитуСтраницы использующие волшебные ссылки НавигацияПерсональные инструментыВы не представились системеОбсуждениеВкладСоздать учётную записьВойтиПространства имёнСтатьяОбсуждениеВариантыПросмотрыЧитатьПравитьПравить кодИсторияЕщёПоиск    Навигация    Заглавная страницаРубрикацияУказатель АЯИзбранные статьиСлучайная статьяТекущие события    Участие    Сообщить обошибкеСообществоФорумСвежие правкиНовые страницыСправкаПожертвовать    Инструменты    Ссылки сюдаСвязанные правкиСлужебные страницыПостоянная ссылкаСведения остраницеЭлемент ВикиданныхЦитировать страницу    В других проектах    Викисклад    Печатьэкспорт    Создать книгуСкачать как Версия для печати    На других языках     Укранська Править ссылки Эта страница в последний раз была отредактирована  марта  в Текст доступен по лицензии    в отдельных случаях могут действовать дополнительные условияПодробнее см Условия использования зарегистрированный товарный знак некоммерческой организации   Политика конфиденциальностиОписание ВикипедииОтказ от ответственностиСвяжитесь с намиРазработчикиСтатистикаЗаявление о кукиМобильная версия                   ШаблонСтатья         Шаблон           ШаблонХорошаястатья            Шаблон           ШаблонБсокр           Шаблонтекст            ШаблонКнига            ШаблонКнигаШнайерБПрикладнаякриптография            Шаблон            