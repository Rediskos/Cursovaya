  ВикипедияянварьфевральмартапрельмайиюньиюльавгустсентябрьоктябрьноябрьдекабрьВикипедияСтатьи с некорректным использованием шаблонов  не указан языкВикипедияСтатьи с некорректным использованием шаблонов  указан неверный параметрСтраницы использующие волшебные ссылки ВикипедияСтатьи с источниками из ВикиданныхПРОИТСтатьи по алфавитуПРОИТПоследняя правка в текущем месяцеВикипедияХорошие статьиВикипедияХорошие статьи по алфавитуЯзыки программирования по алфавитуЯзыки программирования появившиеся в  годуФункциональные языки программированияДекларативные языки программированияЯзыки с динамической типизациейСвободные компиляторы и интерпретаторыЯзыки параллельного программированиярусскийМатериал из Википедии  свободной энциклопедииЭто стабильная версия отпатрулированная  апреля СостояниеотпатрулированаПерейти к навигацииПерейти к поискуУ этого термина существуют и другие значения см Эрланг значения  Семантикамультипарадигмальный параллельное функциональное программированиеКласс языкамультипарадигмальный язык программирования язык параллельного программирования язык функционального программирования декларативный язык программирования язык программирования открытое программное обеспечение свободное программное обеспечение и навыкПоявился вАвторДжо АрмстронгРазработчикДжо Армстронг и Расширение файловВыпуск  января Система типовсильная динамическаяИспытал влияние Пролог Лисп   Миранда Ада Модула и Лицензия  СайтанглОСкроссплатформенность  функциональный язык программирования с сильной динамической типизацией предназначенный для создания распределённых вычислительных систем Разработан и поддерживается компанией  Язык включает в себя средства порождения параллельных легковесных процессов и их взаимодействия через обмен асинхронными сообщениями в соответствии с моделью акторов был целенаправленно разработан для применения в распределённых отказоустойчивых параллельных системах реального времени Переход  для которых кроме средств самого языка имеется стандартная библиотека модулей и библиотека шаблонных решений так называемых поведений фреймворк  англ   Программа на  транслируется в байткод исполняемый виртуальными машинами находящимися на различных узлах распределённой вычислительной сети системы поддерживают горячую замену кода что позволяет эксплуатировать оборудование безостановочноСвой синтаксис и некоторые концепции  унаследовал от языка логического программирования Пролог Язык поддерживает многие типы данных условные конструкции сопоставление с образцом обработку исключений списковые включения и выражения битовых строк функции анонимные функции функции высшего порядка рекурсивные определения функций оптимизацию хвостовой рекурсии модули приём и отправку сообщений между процессами Препроцессор поддерживает работу с макросами и включение заголовочных файловПопулярность  начала расти в связи с расширением его области применения телекоммуникационные системы на высоконагруженные параллельные распределённые системы обслуживающие миллионы пользователей  такие как чаты системы управления содержимым вебсерверы и распределённые требующие масштабирования базы данных  применяется в нескольких базах данных высокой доступностиСодержание История Философия Основные особенности Высокоуровневые конструкции Параллельные вычисления Распределённые вычисления Мягкое реальное время Горячая замена кода Описание языка Типы данных Числа Атомы Битовые строки и бинарные данные Кортеж Список Строка Логические значения Функциональный объект  Запись Ассоциативный массив Другие типы Встроенные функции для работы с типами Операции Арифметические операции Битовые операции Логические операции Операции сравнения Переменные Сопоставление с образцом Функции Примеры Условные выражения Препроцессор и макросы Обработка ошибок Модули Процессы Создание процессов Отправка и приём сообщений Обработка ошибок и завершение процессов Вводвывод Библиотеки Стандартная библиотека модулей Таблицы  и  Фреймворк  Разработка графического интерфейса пользователя Программирование на  Интерактивная оболочка Документирование и оформление кода Типы и анализ кода Тестирование профилирование рефакторинг Эффективность  и другие языки программирования Интеграция и гибридные языки Сравнение  и  по производительности Сравнение взаимодействия процессов в  и  Критика Сфера применения Сообщество Примечания Литература Статьи СсылкиИсторияправить  править кодВ середине х в компьютерной лаборатории компании  исследовали применимость существовавших на тот момент языков программирования для программного обеспечения телекоммуникационных систем Джо Армстронг Роберт Вирдинг   и Майк Вильямс   под руководством Бьярне Деккера   написав прототипы программ на различных языках пришли к выводу что ни один из этих языков не имел полного набора возможностей необходимых в области телекоммуникационных систем В результате был создан новый язык программирования  Своё название язык вероятно получил в честь датского математика и инженера Агнера Эрланга основателя научного направления по изучению сетевого трафика в телекоммуникационных системах По другой версии название языка изначально было сокращением от  Влияние на  оказали  Миранда Ада Модула  Пролог Кроме того на способ обновления программного обеспечения повлиял  и использованные  проприетарные языки  и Потребовалось четыре года развития языка и прототипирования с использованием виртуальной машины Пролога после чего в  году Майк Вильямс переписал виртуальную машину для  на Си В  году  был впервые использован в коммерческом проекте В  году вышла новая версия  вобравшая накопившийся к тому моменту опыт использования языка Язык был сочтён достаточно развитым для использования в других продуктах компании решения для широкополосной связи  В декабре  года случилось событие которое Джо Армстронг считает решающим для  проект  в  по созданию нового маршрутизатора как оборудования так и системного программного обеспечения на  потерпел неудачу В результате реорганизации проекта удалось использовав разработанное оборудование и язык программирования  начать работы над маршрутизаторами серии  Ресурсов лаборатории для такого проекта оказалось недостаточно поэтому для работ по  было создано производственное подразделение под названием     В  году увидел свет одноимённый фреймворк Неожиданно в  году топменеджмент  решил не брать на себя обязательств по разработке и поддержке собственного языка программирования сосредоточившись вместо этого на  Использование  было запрещено в новых проектах    в связи с реализацией плана по аутсорсингу программной технологии компании   Это решение очень сильно повлияло на будущее  оно привело к открытию кода  под открытой лицензией  аналог    а также послужило главной причиной начала распространения языка за пределами создавшей его компании Основным возражением против открытия исходного кода являлось решение вопросов касающихся патентов но эти трудности были преодолены Вскоре многие из основных разработчиков покинули  чтобы организовать собственный бизнес  В начале х научные круги стали проявлять интерес к  С  года стал проводиться ежегодный    продолжал спонсирование проекта  от англ  высокопроизводительный  уппсальского университетаПримечание  Проект  занимался эффективной реализацией языка и инструментами для проверки типов а с  года созданный в группе проекта компилятор в машинный код входит в поставку свободнораспространяемой версии  Работы связанные с  ведут и другие высшие учебные заведения Инструменты для рефакторинга созданы в Кентском университете в Великобритании и университете Лоранда Этвёша в Венгрии инструменты для различных видов тестирования в Мадридском политехническом университете техническом университете Чалмерса и Гётеборгском университетеКогда системы с симметричной многопроцессорностью только начинали завоёвывать рынок серверов и настольных компьютеров бросая вызов разработчикам программного обеспечения уже в  году первая версия  с поддержкой  была выпущена совместными усилиями команды  из  и команды  Вскоре после этого вышла первая почти за десятилетие крупная монография по    Джо Армстронга после чего многие разработчики открыли для себя  и язык стал набирать популярностьПроцесс развития языка включает в себя рассмотрение предложений по развитию  англ   Через эти предложения сообщество вносит изменения в стандартную поставку  С внесёнными предложениями можно ознакомиться на вебстранице Философияправить  править кодПо свидетельству Майка Вильямса  задумывался для решения трёх проблем разработки распределённых систем мягкого реального времени с высокой степенью параллелизма возможности быстрой и эффективной разработки ПО получения системы устойчивой к программным и аппаратным сбоям и возможности обновления системы на лету без простоя оборудованияПо словам Вильямса философия которой придерживались разработчики  подходит и для разработки программного обеспечения на этом языке Началоцитаты    Началоцитаты    Началоцитаты    Началоцитаты   Началоцитаты   Началоцитаты  Найдите наиболее подходящие методы Проектируйте с использованием прототиповОдних идей мало нужно уметь их реализовать и знать что они работаютДелайте ошибки в небольшом масштабе а не в производственном проекте     Оригинальный текстангл                                  Конеццитаты   Большинство языков созданных прежде  были разработаны без предварительного нахождения своей области применения тогда как  был разработан специально на основе требований к распределённым отказоустойчивым параллельным системам реального времени С развитием сети Интернет оказалось что многие приложения имеют аналогичные требования чем и объясняется растущий интерес к языкуВысокая отказоустойчивость кроется в применении изолированных друг от друга легковесных процессов связанных лишь механизмом обмена сообщениями и сигналами выхода Принцип разработчиков на  по отношению к обработке ошибочных ситуаций в процессах можно выразить в виде высказыванияПозвольте приложению упасть и пускай чтото другое имеет с этим делоОригинальный текстангл         или сокращённо    пусть падает Связано это с тем что в системе легко следить за завершением процесса завершать процессы связанные со сбойным и запускать новые процессыОсновные особенностиправить  править кодВысокоуровневые конструкцииправить  править код является декларативным языком программирования который скорее используется для описания того что должно быть вычислено нежели как Например определение функции которое использует сопоставление с образцом для выбора одного из вариантов вычисления или извлечения элемента данных из составной структуры напоминает уравнение Сопоставление с образцом распространено даже на битовые строки что упрощает реализацию телекоммуникационных протоколовФункции являются объектами первого класса в  В языке также широко применяются характерные для функциональной парадигмы программирования списковые включения генераторы списковПараллельные вычисленияправить  править код Обмен сообщениями между процессами в Отличительной особенностью языка является применение легковесных процессов в соответствии с моделью акторов Такой подход позволяет выполнять одновременно сотни тысяч и даже миллионы таких процессов каждый из которых может иметь скромные требования по памяти Процессы изолированы друг от друга и не имеют общего состояния но между ними можно установить связь и получать сообщения об их состоянии Для взаимодействия процессов используется асинхронный обмен сообщениями Каждый процесс имеет свою очередь сообщений обработка которой использует сопоставление с образцом Процесс отправивший сообщение не получает уведомления о доставке даже если идентификатор процессаполучателя недействителен или получатель игнорирует сообщение Таким образом ответственность за правильно организованное взаимодействие между процессами лежит на разработчикеНапример при реализации на  сетевого чата структура программы может напрямую отражать одновременность действий пользователей по обмену сообщениями путём запуска новых процессов Эффективность передачи сообщений сохраняется и при увеличении числа процессов а требования к памяти минимизируются за счёт того что легковесными процессами управляет виртуальная машина а не средства нижележащей операционной системыРаспределённые вычисленияправить  править код с самого начала проектировался для распределённых вычислений и масштабируемости Распределение вычислений встроено в синтаксис и семантику языка поэтому построение системы можно вести абстрагируясь от конкретного места вычислений В стандартной поставке  может наладить связь процессов по протоколу  независимо от поддерживаемых им нижележащих платформ операционных системРаботающий экземпляр среды выполнения  англ   называется узлом англ Программы написанные на  способны работать на нескольких узлах Узлами могут быть процессоры многие ядра одного процессора и даже целый кластер машин Узел имеет имя и знает о существовании других узлов на данной машине или в сети Создание и взаимодействие процессов разных узлов не отличается от организации взаимодействия процессов внутри узла Для создания процесса на другом узле процессу достаточно знать его имя и без особых на то оснований он может не интересоваться физическим расположением взаимодействующего с ним процесса Синтаксис отправки сообщения процессу на своём узле и удалённом один и тот жеБлагодаря встроенным в язык возможностям распределённых вычислений объединение в кластер балансировка нагрузки добавление узлов и серверов повышение надёжности вызывают лишь небольшие затраты на дополнительный код По умолчанию узлы спроектированы для работы внутри обособленного сегмента сети  но если необходимо коммуникация между узлами может происходить с применением защищённого криптографическими методами протокола Мягкое реальное времяправить  править кодПрограммы на высокоуровневом языке  могут быть использованы в системах мягкого реального времени которое иногда переводят как псевдореальное или квазиреальное Автоматизированное управление памятью и сборка мусора действуют в рамках одного процесса что даёт возможность создавать системы с миллисекундным временем отклика даже несмотря на необходимость сборки мусора не испытывающие ухудшения пропускной способности при высокой нагрузкеГорячая замена кодаправить  править кодДля систем которые не могут быть остановлены для обновления кода  предлагает горячую замену кода англ   При этом в приложении могут одновременно работать старая и новая версии кода Таким способом программное обеспечение на  может быть модернизировано без простоев а выявленные ошибки исправленыОписание языкаправить  править кодТипы данныхправить  править кодТипизация в  является сильной и динамической Динамическая типизация была выбрана для языка  по причине того что первые разработчики были больше с ней знакомы По мнению Джо Армстронга статическая типизация потребовала бы очень больших трудозатрат в частности реализовать систему горячей дозагрузки кода было бы крайне затруднительно Такая типизация при которой возможные ошибки типов выявляются только во время выполнения тем не менее не помешала создавать системы с очень высоким уровнем доступности Данные в  являются неизменяемыми операции не переписывают старые значения находящиеся в памяти Если необходимо модули на  можно снабдить описаниями и определениями новых типов не влияющими на компиляцию программы для автоматической проверки типов с помощью утилиты Числаправить  править кодВ  есть два типа числовых литералов целые и с плавающей запятой например   Кроме обычной нотации числа можно задавать через символ  например  означает  или вместе с указанием системы счисления с основанием от  до  в старых версиях до  например   В  применяются целые числа произвольной точности и действительные числа двойной точности  бита в стандарте  Для работы с числами можно использовать модуль  который содержит обычный набор математических функций и функцию  возвращающую число    Пример вычислений в интерактивной оболочке                Атомыправить  править кодАтом константа с именем которая должна быть заключена в одинарные кавычки если не начинается со строчной буквы или содержит знаки кроме букв цифр подчёркивания точки и символа  Понятие атома заимствовано из Пролога и его можно считать аналогом перечислений  в других языках программирования без необходимости предварительной декларации Атомы используются почти исключительно в сравнениях имеющих в  очень эффективную реализацию Кроме того некоторые атомы имеют определённый смысл в возращаемых значениях и описании исключений К ним относятся       Битовые строки и бинарные данныеправить  править кодБитовая строка используется для хранения в памяти нетипизированных данных Строки состоящие из целого количества октетов называются бинарными или двоичными данными англ Синтаксис описания битовой строки довольно гибок так как описывает значения битов отдельных диапазонов и может быть снабжён модификатором типа Несколько примеров в интерактивной командной оболочке         Выражения битовых строк англ  аналогичны списковым включениям но работают над битовыми строками       В этом примере переменная  последовательно получает биты числа  которые затем инвертируются операцией битового отрицания  от англ  в результате чего получается число Кортежправить  править кодКортеж англ составной тип данных с фиксированным количеством элементов При доступе к элементам кортежа с помощью встроенных функций нумерация элементов начинается с единицы а не с нуля Первый элемент кортежа принято использовать для указания роли кортежа в программе Если первый элемент атом его называют тегом англ метка В  принято строить различные типы данных на основе кортежей с тегами что облегчает отладку программы и считается хорошим стилем программированияДля работы с кортежами есть несколько встроенных функций например             Списокправить  править кодСписок англ составной тип данных содержащий переменное число элементов Для манипуляции со списками можно применять функции модуля  стандартной библиотеки Формально список определяется как имеющий голову англ и хвост англ что выражается синтаксически в виде  где хвост обычно является списком возможно пустым Пустой список обозначается Списки можно записывать и более привычным способом Следующие записи эквивалентны Для работы со списками можно применять списковые включения генераторы списков например        Модуль  стандартной библиотеки содержит функции для обработки списков и строк так как в  строка является списком такие как нахождение максимума сортировка изменение порядка элементов на противоположный суммирование элементов итп В следующем примере два списка склеиваются операцией конкатенации а затем разбиваются на две части функцией   В модуле  имеется также набор функций высшего порядка таких как         Следующий пример иллюстрирует работу функции  англ свернуть  от англ правая для свёртки списка первым параметром которой должна быть функция           функция   деление  на          Результат выполнения свёртки справа налево в строке  тождественен цепочечному делению строка  Второй параметр  даёт начальное значение для так называемого аккумулятора Для каждого элемента списка справа налево к элементу и аккумулятору применяется функция заданная первым аргументом  а значение записывается в аккумулятор По исчерпанию списка функция возвращает значение аккумулятора Функция является достаточно мощным средством если учесть что аккумулятор может быть списком или кортежемСтрокаправить  править кодВ  нет самостоятельного типа для строк внутренне строки представляются списками Синтаксически строку можно задать кавычками Так Привет равносилен в подходящей кодировке списку   поддерживает  как в строке так и в записи отдельного знака через Атомы и строки внешне достаточно похожи но имеют совершенно различные реализации Тогда как атомы можно только сравнивать строки поддерживают многие другие операции для них есть множество функций в модулях  и  Строка может выполнять функции атома но память занимаемая строкой пропорциональна её длине тогда как атомы хранятся в системной таблице и на каждое использование атома в программе приходится лишь пара байтов вне зависимости от длины атома Сравнение двух атомов это сравнение двух внутренних идентификаторов выполняемое за одну операцию тогда как сравнение строк предполагает поэлементный проход элементов строкЛогические значенияправить  править кодДля значений истина и ложь в  применяются атомы  истина и  ложь которые и используются операциями сравнения логическими операциями встроенными функциями Пример     Функциональный объект править  править кодвыражение позволяет создать анонимную функцию например для передачи в качестве параметра другим функциям С помощью  можно также получить функциональный объект для функции из модуля Примеры                  Записьправить  править кодЧтобы помечать отдельные элементы кортежей и избежать ошибок при написании программы в  был внесён синтаксис записей англ Для работы с записями необходимо в начале дать описание записи директивой  например для записи  описание может быть следующим   Из этого описания компилятор узнаёт что имеются в виду кортежи из четырёх элементов в которых элементы со второго по четвёртый соответствуют полям    порядок важен записи с именем  определяется атомом в первом элементе кортежа Значением по умолчанию для поля  является строка  Если значение по умолчанию не указано явно подразумевается атом Создание записей и извлечение элементов записи всегда требует явного указания имени записи    все поля получают значения по умолчанию      все поля получили значенияСинтаксис доступа к значениям полей записи  Ассоциативный массивправить  править кодАссоциативный массив словарь хранит пары вида ключ значение В качестве как ключа так и значения может выступать любой терм                     Другие типыправить  править кодВ языке  имеются и другие типы данных Тип ссылка англ является практически уникальной в среде времени выполнения  Ссылка создаётся вызовом функции  и может повториться через  вызовов этой функции Ссылки можно сравнивать на равенство а применяются они для одноразовых пометок или волшебного печеньяИдентификатор порта англ  определяет порт для связи с внешним по отношению к системе миром Порт позволяет создавшему его процессувладельцу так называемому присоединённому процессу обмениваться бинарными сообщениями со сторонними программами и ОС способом принятым в данной операционной системеИдентификатор процесса англ как и следует из его названия идентифицирует процесс порождаемый различными функциями  Идентификатор можно считать уникальным во время работы системы но в долго работающих системах могут всётаки быть использованы повторно что обычно не является проблемой на практикеВстроенные функции для работы с типамиправить  править кодДля преобразования типов используются встроенные функции  от англ  вида  из  в  а для проверки принадлежности значения тому или иному типу функции вида  является       Операцииправить  править кодАрифметические операцииправить  править код предоставляет наиболее распространённые арифметические операции для целых чисел и чисел с плавающей запятойОбозначениеВыполняемая операцияПримерРезультат примераУнарный плюсУнарный минусСложениеВычитаниеУмножениеДеление  Целочисленное деление  Целочисленное деление с остатком  Все эти операции левоассоциативны Унарные операции имеют наивысший приоритет затем следует умножение и деление наименьший приоритет у сложения и вычитания При необходимости целое может приводиться к типу с плавающей запятойБитовые операцииправить  править кодБитовые операции работают над целыми числами и дают в результате целое числоОбозначениеВыполняемая операцияПримерРезультат примераПобитовое отрицание Побитовое И  Побитовое ИЛИ  Побитовое исключающее ИЛИ  Побитовый сдвиг вправо  Побитовый сдвиг влево  Логические операцииправить  править кодЛогические операции работают над логическими значениями  истина и  ложь получаемыми в результате сравнений и применения функций проверки типаОбозначениеВыполняемая операцияПримерРезультат примераОтрицание НЕ Конъюнкция И    Аналогично  но не вычисляет второй операнд если первый     Дизъюнкция ИЛИ  Аналогично  но не вычисляет второй операнд если первый     Исключающее ИЛИ  Операции сравненияправить  править кодОперации сравнения получают два операнда а результатом операции является логическое значение  или  В  есть следующие операции  равно  не равно  меньше или равно  меньше  больше  больше или равно а также сравнения которые работают без приведения к одному типу  не равно в точности и  равно в точностиМожно сравнивать и значения разных типов но они считаются в  упорядоченными следующим образомчисло  атом  ссылка  функция  порт  идентификатор процесса  кортеж  список  бинарные данныеСписки считаются упорядоченными в лексикографическом порядке а кортежи сравниваются по длине и только затем в лексикографическом порядкеПеременныеправить  править кодПеременные служат для хранения значений простых и составных типов Имя переменной начинается с прописной буквы в специальных случаях с подчёркивания и может содержать буквы цифры подчёркивания Значение можно присвоить переменной лишь один раз это свойство языка программирования называется единичным присваиванием англ  К достоинствам единичного присваивания можно отнести устранение необходимости в блокировках а также упрощение отладки программыПередача параметров в функцию происходит по значению поэтому все они вычисляются перед вызовом функцииОбласть видимости переменной распространяется от момента её появления в заголовочной части описания функции или присваивания до конца части описания функции Пример               В этом примере область видимости  всё описание функции  а  от присваивания до конца описания Переменная  во второй части клоза описания функции  не имеет отношения к переменной  из  её область видимости распространяется до конца этого клозаПри выходе вычислений за пределы области видимости переменной память занятая её содержимым может быть освобождена в процессе сборки мусора если значение переменной не используется в другой части программыСопоставление с образцомправить  править кодСопоставление с образцом используется в  для присваивания в том числе при работе с параметрами функций управления потоком выполнения программы извлечения значений составных типов выбора сообщения из очереди В левой части сравнения или в заголовке функции могут находиться связанные уже имеющие значение и несвязанные получающие значение переменные а также литералы атомы числа строки В результате исполнения сравнение может оказаться успешным в этом случае переменные связываются со значениями и неуспешным переменные остаются несвязанными В образце могут быть переменные значение которых для образца безразлично их имена записываются начинающимися с подчёркивания Переменная с именем  подчёркивание сопоставляется с любым значением но при этом не происходит связывания Такую переменную можно применять много разФункцииправить  править кодПрограммы на  состоят из функций которые вызывают друг друга Количество параметров функции называется арностью При вызове функции заголовочные части описания функции сопоставляются с образцом В случае совпадения параметров вызова формальные параметры связываются с фактическими и исполняется соответствующая часть тела функции Запись варианта вычисления функции для некоторого образца может называется клозом от англ а определение функции это набор из одного или более клозовДля уточнения сопоставления с образцов в функциях можно использовать охранные выражения которые следуют после ключевого слова  В примере ниже определена функция вычисления знака числа которая рассчитывается в зависимости от сравнения параметра с нулём                  Клозы  перебирает в том порядке в котором они записаны пока не будет найден подходящий заголовок В охранных выражениях можно использовать только ограниченный набор встроенных функций так как эти функции не должны иметь побочных эффектовРазумеется функции  поддерживают рекурсивные вызовы В случае когда определение функции оканчивается рекурсивным вызовом хвостовая рекурсия  использует оптимизацию стек вызовов не применяетсяКак параметром так и результатом функции может быть другая функция В следующем примере функция одного аргумента возвращает функцию для прибавления аргумента            Определение функции возвращающей функцию                                   Функция возвращает объект                                 Такой синтаксис не работает                                   Дополнительные скобки позволяют добиться требуемого результата                    То же самое с использованием дополнительной переменнойПримерыправить  править кодВычисление факториала на            Алгоритм сортировки напоминающий быструю сортировку    Тривиальный случай пустого списка      Конкатенация списка элементов до  списка из одного элемента  и после                             В этом примере функция  вызывается рекурсивно до исчерпания всех элементов Выражение         собирает список  из элементов  таких что элемент  меньше  Оператор  склеивает спискиУсловные выраженияправить  править кодКроме выбора описания в определении функции в  есть и другие условные выражения выражения выражение выбора и выражения Выражение выбора позволяет организовать сопоставление с образцом внутри функции и обычно имеет следующий синтаксис выражениевыбора   образец  охрана  выражение выражение   образец  охрана  выражение выражение     образец  охрана  выражение выражение Это выражение всегда возвращает значение соответствующее последнему вычисленному выражению в строке с подошедшим образцом Это возвращаемое значение может служить возвращаемым значением функции а может быть присвоено переменной Как и в заголовочной части функции после образца может следовать охранное выражениеУпрощённым вариантом выражения является выражение  охрана  выражение выражение   охрана  выражение выражение     охрана  выражение выражение Здесь охрана охранное выражение Первое истинное охранное выражение вызывает выполнение соответствующих выражений последнее из которых и является значением всего выражение Следует заметить что и здесь в охранном выражении можно применять только ограниченный набор операций и встроенных функцийЗапятые в охранном выражении работают как операция  например      меньше или равно нулю         больше нуля и меньше десяти      больше или равно десятиКомпилятор  следит за безопасностью связывания переменных внутри условных выражений как видно из следующего примера модуля                             При попытке откомпилировать модуль возникают сообщения об ошибках так как в таком коде одна из переменных не связывается со значением               Правильным было бы определить все используемые далее по коду переменные во всех ветвях выраженияПрепроцессор и макросыправить  править кодПрепроцессор   позволяет вкладывать файлы с исходным кодом один в другой определять макросы и осуществлять простые и параметризованные макроподстановки Макрос определяется с помощью директивы  а макроподстановка осуществляется указанием имени макроса и возможных параметров после вопросительного знака  Следующий пример показывает определение и применение параметризованного макроса        Имя макроса обычно пишется прописными буквами Определение макроса должно содержать лексемы  целиком например попытка задать часть имени переменной с помощью макроса вызовет синтаксическую ошибку Макросы могут использоваться для повышения удобочитаемости кода в охранных выражениях для операторов отладки итп Препроцессор имеет несколько предопределённых макросов которые нельзя переопределить     Заголовочный файл расширение  с определениями макросов и записей можно включить при помощи директивы Обработка ошибокправить  править кодДля обработки исключительных ситуаций в  можно применять конструкцию  в общем случае записываемую в следующем виде вычисляемоевыражение   образец  охрана  выражение  образец  охрана  выражение    образец  охрана  выражение  классобразецИскл  охранаИскл  выражениеИскл    классобразецИскл  охранаИскл  выражениеИсклКак и в случае выражения вычисляемое выражение сопоставляется с образцом части между  и  для получения результатаПримечание  После ключевого слова  следуют части обработки исключений в которых в дополнение к образцам исключений могут быть указаны классы исключений перед двоеточием   и  Подчёркивание может использоваться как в образце так и в классе исключения Следующий простой пример иллюстрирует перехват ошибки класса  при вычислении квадратного корня                 Для создания исключений определённых пользователем используется функция  которая принимает кортеж с более детальным описанием возникшей ошибки и генерирует исключение класса  Использование этой функции нежелательно изза ухудшения удобочитаемости кода программы но может потребоваться в некоторых случаях при работе с вложенными структурами данных например при разборе  Исключения класса  возникают в результате вызова встроенной функции  или сигнала выходаДо разработки Ричардом Карлссоном   из команды проекта  описанного выше нового механизма обработки исключений появился в версии  в  использовались выраженияМодулиправить  править кодКод программы на  можно разбить на отдельные модули Модуль имя для набора функций организованных в одном файле Имя модуля должно совпадать с именем файла если отбросить расширение Модуль можно откомпилировать в байткод как из командной строки операционной системы так и из командной оболочки  В файле модуля можно записать объявления функций и директивы иногда называются атрибутами Обязательным атрибутом является только атомименимодуля Другой часто используемый атрибут  применяется для указания списка экспортируемых функций то есть функций которые можно использовать за пределами модуляФункции в  однозначно определяются модулем именем и арностью Например  соответствует функции  из модуля  принимающей один аргумент Вызвать функцию можно так Исходный текст модуля компилируется в файл файл содержащий байткод виртуальной машины  англ    В свою очередь  англ   система времени выполнения  выполняет этот кодПроцессыправить  править кодОсновной абстракцией параллельного программирования в  является процесс Процессы могут порождать другие процессы выполняться одновременно обмениваться сообщениями реагировать на завершение друг другаСоздание процессовправить  править кодДля создания нового процесса служит несколько встроенных функций  и её аналоги Функции возвращают идентификатор процесса который может использоваться например для отправки сообщений вновь созданному процессу В интерактивной консоли  можно получить список процессов и другую информацию посредством вызова функций  и  соответственноОтправка и приём сообщенийправить  править кодКак и язык Оккам  использует для отправки сообщения синтаксис с восклицательным знаком ИдПроцесса Сообщение Приём сообщения то есть извлечение его из очереди почтового ящика процесса выполняется с помощью выражений обычно записываемых следующим образом  образец  охрана  выражение выражение   образец  охрана  выражение выражение     образец  охрана  выражение выражение   НесвязаннаяПеременнаяДляОстальныхСообщений  выражение выражение Встретив такое выражение интерпретатор последовательно просматривает сообщения из очереди Каждое сообщение интерпретатор сопоставляет с образцом и если оно удовлетворяет образцу вычисляются соответствующие выражения Когда все сообщения перебраны и подходящего не оказалось процесс блокируется в ожидании новых сообщений после чего перебор очереди повторяется Если в выражении отсутствует образец которому удовлетворяет любое сообщение такое выражение называется выборочным выражениемОбработка ошибок и завершение процессовправить  править кодПроцесс можно связать с другим в результате чего между процессами устанавливается двунаправленное соединение англ В случае если один из процессов завершается ненормально всем связанным с ним процессам передаётся сигнал выхода англ  Процессы получившие сигнал завершаются распространяя сигнал дальше Сигнал выхода является кортежем элементами которого являются атом  выход идентификатор завершившегося процесса и причину завершения процесса Причина завершения передаётся по цепочке завершающихся процессовПроцесс может осуществить перехват ошибки англ  если у него установлен флаг перехвата выходаПримечание  Такой процесс получает сигналы выхода связанных с ним процессов в виде обычных сообщений с той же структурой кортежа Перехваченный сигнала выхода более не передаётся связанным с процессомперехватчиком процессам Сигнал выхода с причиной атомом  нормальное завершение процесса не вызывает завершения связанного процесса Если же причина атом  процесс завершается безусловно независимо от флага перехвата выхода а связанным с ним процессам в качестве причины отправляется атом  что даёт им возможность среагироватьВ  есть возможность установить и однонаправленное соединение При завершении наблюдаемого процесса процесснаблюдатель получает сообщение с указанием причины завершенияПроцесс может остановить сам себя или другой процесс вызвав функцию Вводвыводправить  править кодВ планировщике процессов системы проблема вводавывода присущая многим другим языкам параллельного программирования решена достаточно элегантно Управление вводомвыводом интегрированное с планировщиком уже на самом нижнем уровне осуществляется на основе событий что позволяет программе обрабатывать входящие и исходящие данные без излишних блокировок Такой подход требует меньшего числа установки и разрыва соединений а также убирает необходимость в блокировках и переключениях контекста К сожалению такой достаточно эффективный способ более сложен для понимания программистами и находит применение в основном в системах с явными требования по высокой доступности и низкому времени отклика Реализация событийноориентированного вводавывода встроена в систему что является ещё одним преимуществом при проектировании параллельных приложенийСтандартная библиотека содержит модуль  с функциями вводавывода Такие функции содержат побочные эффекты заключающиеся в появлении выведенной информации на консоли или записывании данных в файл на диске Например функция  для форматированного вывода выводит строку с подстановкой параметров возвращая в случае успеха атом  Пример вывода   Пример вывода Функции модуля  включают в себя стандартный серверный интерфейс вводавывода Протокол вводавывода  англ   детально определяет связь клиента и сервера Под сервером вводавывода понимается процесс который обрабатывает запросы и выполняет запрошенные команды например на устройстве вводавывода Клиентом является любой процесс которому требуется работать с устройствомБиблиотекиправить  править кодСтандартная библиотека модулейправить  править кодСогласно официальной документации стандартная библиотека модулей  является обязательной для включения в минимальную систему  наряду с ядром  В библиотеку входят модули предоставляющие разнообразные функции для работы со встроенными типами и другими структурами данных вводавывода обращения к среде окружения для работы с файловой системой процессами итпМодуль  определяет функциональный абстрактный тип данных для динамического массива и имеет функции позволяющие извлекать и обновлять элементы массива определять рекурсивные функции для работы с массивами Модуль  расширяет возможности модуля  функциями для работы конкретно со списками символов какими являются строки в  Модуль  от англ словарь содержит функции для ассоциативного массива позволяющие хранить извлекать и удалять значения по ключу соединять массивы и производить итерации по элементам Математические функции можно найти в модуле  а функции для генерации псевдослучайных чисел содержатся в модуле  Модуль  предоставляет функции для григорианского календаря запросы текущей даты преобразования единиц измерения и интервалов времени а модуль  содержит функции перевода интервалов времени к миллисекундам запуска событий по таймеру и другие связанные со временем функции Модуль  содержит все встроенные функции  как общие так и относящиеся к виртуальной машине Модуль  даёт доступ к функциям файловой системы таким как открытие чтение запись удаление файлов а модуль  позволяет писать функции для манипуляции с именами и путями к файлам абстрагируясь от конкретной операционной системы Модуль  предоставляет функции вводавывода Кроме этих наиболее важных модулей стандартная библиотека содержит и многие другие с которыми можно познакомиться по документацииТаблицы  и править  править кодДля организации коллекций в оперативной памяти  предлагает модуль   англ   хранилище термов Примечание   может хранить четыре вида коллекций множество англ упорядоченное множество англ  мультимножество англ мультимножество с повторениями англ  Доступ к элементам коллекций происходит по ключевому полю кортежа ключи могут быть любых типов Упорядоченные множества реализованы в виде бинарных сбалансированных АВЛдеревьев а остальные коллекции с использованием хештаблицтаблицы дополняют функциональность таблиц за исключением упорядоченных множеств позволяя сохранять данные в файлахФреймворк править  править кодОсновная статья    Дерево процессов англ   является хорошо отлаженным набором полезных поведений англ процессов и используется для создания серверных приложений  формализует действия процессов и позволяет строить на их основе приложения не следует путать с приложением готовым программным продуктом В модулях ОТР определены общие стандартизированные шаблоны для конструирования параллельных приложений Наиболее популярными поведениями являются обобщённый сервер и наблюдатель англ но имеются и другие конечный автомат обработчик событий  содержит и другое связующее программное обеспечение англ например СУБД поведения делятся на рабочие процессы англ  выполняющие собственно обработку запросов и процессовнаблюдателей англ В задачу последних входит слежение за рабочими процессами и другими процессаминаблюдателями потомками Деревья наблюдателей составляют приложение англ Документация по  определяет приложение как компонент реализующий некоторую функциональность которая может быть независимо запущена на исполнение и остановлена как целое а также повторно использована в других системах Разработчик приложения пишет код модулей функций обратного вызова англ  в которых и находится специфичная для данного приложения часть функциональностиХотя  строго говоря не является частью языка  он настолько вошёл в культуру и практику разработчиков на  что подчас между ними сложно провести границуРазработка графического интерфейса пользователяправить  править кодРазработка приложений с графическим интерфейсом пользователя не считая вебинтерфейсов может вестись при помощи библиотеки  библиотеки  портированной для   входит в стандартную поставку   написан на  поэтому перед разработчиками  стояла задача выразить средствами  иерархию объектов Несколько упрощая в  классам соответствуют модули а объектам ссылки Макросам на С соответствуют макросы  Некоторые типы данных для которых в С были использованы классы представляются в  с помощью других типов данных например  задаётся в виде кортежа из двух элементов События в  могут быть обработаны в  либо с помощью функций обратного вызова англ  либо более естественной в среде  передачей сообщенийПрограммирование на править  править кодИнтерактивная оболочкаправить  править код Интерактивная оболочка  в отдельном окнеИнтерактивная оболочка англ для  может быть вызвана в подобных системах по команде  в   В оболочке можно вводить выражения и получать результат их выполнения опробовать новый код заниматься интерактивной отладкой а также управлять системой находящейся в промышленной эксплуатацииВ оболочке можно использовать дополнительные функции команды доступные только в ней Например команда  осуществляет выход из оболочки с завершением всего что делает системаВ оболочке можно вызвать меню с помощью  в подобных ОС или  в  В этом меню есть различные команды в том числе  немедленный останов  продолжение работы в оболочке и другие информационные и вспомогательные команды для работы с системой Комбинацией клавиш  вызывается ещё одно командное меню с помощью которого можно среди прочего остановить завесивший оболочку процесс и вернуться в оболочку  и затем Документирование и оформление кодаправить  править кодТекст от знака процента  до конца строки считается комментарием в  Генерация документации из исходного кода в  может производиться системой документирования  Для документирования кода модуля достаточно добавить определённым образом размеченный текст а также файл  для документации уровня проекта в последнем необязательно использовать знаки комментария Инструменты для работы с кодом на  например режим в  подразумевают некоторые соглашения по употреблению символов комментария Так утроенный знак процента вызывает выравнивание по левому краю удвоенный выравнивание на уровне окружающего кода а одиночный знак процента используется для обозначения комментария после кода в конце строки Разработчики  выработали определённые стилевые соглашения касающиеся организации и оформления исходного кода Например хорошим стилем считается понижение вложенности синтаксических структур написание коротких модулей менее  строк кода и функций не длиннее  строк кода использование осмысленных имён для переменных и функций итпТипы и анализ кодаправить  править кодПриложение  разработанное в рамках проекта  и входящее в стандартную поставку позволяет выявить ошибки в том числе ошибки типизации путём статического анализа кода Программа  написанная Тобиасом Линдалом   и Костисом Сагонасом   является частью  Эта программа позволяет проверять определения типов функций сверять указанный в директиве  тип функции с её определением выполнить вывод типов Программа  выводит все типы соответствующие успешному применению функции в общем случае лишь приблизительно в более грубую сторону Использование функции любым другим способом обязательно приведёт к ошибке времени исполнения В следующем примере показан синтаксис определения типа директива  объявление типа полей записи и директива  вместе с определением функции      статус  один из двух атомов    типы полей записи                                                         объявление функции    определение функции     от англ     анализатор противоречий для программ выявляет в коде отдельных модулей и целых приложений избыточные проверки ошибки типов недостижимый код Все выявленные инструментом дефекты требуют устранения так как инструмент не даёт ложных срабатываний Для каждой функции всех проверяемых модулей  устанавливает тип используя основанный на ограничениях вывод типов и анализ потоков данных После определения типов функций производится анализ противоречий в программеТестирование профилирование рефакторингправить  править код предоставляет  для модульного тестирования и фреймворк   для системного тестирования  содержит средства для описания тестов включая необходимый для этого набор макросов а также производит вывод отчёта по окончании тестирования Тестирование модулей происходит путём подключения заголовочного файла из  а функции с тестами могут быть как включены в сам тестируемый модуль а так и вынесены в отдельныйТестирование параллельных программ можно выполнить с помощью    версия  этого продукта доступна бесплатно Кроме тестирования можно провести проверку всех возможных вариантов исходных данных с помощью метода проверки моделей Для этого можно воспользоваться созданной в Мадридском политехническом университете отдельно распространяемой утилитой Для профилирования кода и выявления степени покрытия кода тестами можно обратиться к модулям    и утилите Для  разработаны несколько инструментов рефакторинга исходного кода такие как   а также автоматическая независимая от  утилита  Утилита  позволяет автоматически находить и производить эквивалентные преобразование кода например заменяет     на     Эффективностьправить  править кодКак и многие другие языки программирования  имеет свои секреты написания эффективного кода Совершенствование языка делает некоторые из трюков устаревшими поэтому документация является лучшим руководством в вопросах оптимизации в совокупности с профилированием и стресстестированиемНапример при работе со списками не рекомендуется добавлять элемент в конец длинного списка с помощью конкатенации или функции добавления элемента к списку Вместо этого стоит рассмотреть возможность добавления элемента в начало списка а конечный результат обработать функцией обращения порядка элементов спискаСвои рекомендации есть и для увеличения эффективности параллельных программ Например действия требующие много памяти лучше всего выделять в отдельный процесс так как при этом затраты на сборку мусора будут минимальны память будет освобождена по завершению процесса и другие языки программированияправить  править кодПодробное сравнение возможностей  с другими языками можно найти в статье сравнение языков программированияИнтеграция и гибридные языкиправить  править кодсистема позволяет выполнять интеграцию с системами на других языках программирования Имеются механизмы для сетевого взаимодействия с Си  Лисп    Например для более эффективного синхронного вызова небольших функций на Си можно использовать платформнозависимые функции англ    Высокоуровневые библиотеки позволяют системе представлять С или узлы как обычные узлы Другие языки могут быть более тесно сопряжены со средой выполнения  с помощью драйверов или сетевых сокетов посредством протоколов вроде    Например  может взаимодействовать с  посредством пакета  а для  разработана реализация узла в виде пакета Виртуальная машина  находит применение и в других языках программирования например  и проекте  Джо Армстронга Кроме того Роберт Вирдинг поддерживает проект     приправленный Лиспом в котором синтаксис Лиспа используется с компилятором  Есть и другие языки     Официальный сайт упоминает проект  в котором используется виртуальная машина Сравнение  и  по производительностиправить  править кодХотя опытные программисты давно заметили что их программы для тех же задач получаются более краткими по сравнению с другими широко используемыми в промышленности языками программирования эмпирическое исследование показало что для изученных телекоммуникационных приложений код на  был на  короче чем на С а производительность системы при переписывании кода с С на  возросла почти на  Для одного из использованных в исследовании проектов разница была объяснена написанием дополнительного Скода в рамках защитного программирования управления памятью и кода для высокоуровневой коммуникации то есть возможностями которые являются частью языка  и библиотек Сравнение взаимодействия процессов в  и править  править кодВлияние теории взаимодействующих последовательных процессов Чарльза Э Хоара чувствуется как в  так и в  В  процессы в соответствии с моделью акторов отправляют сообщения друг другу напрямую В  то же самое происходит посредством каналов англ Другим отличием является то что каналы в  имеют типы В  же нет типизации времени компиляции за исключением охранных выражений что позволяет посылать процессам сообщения любого типа но непонятое сообщение либо будет проигнорировано либо навсегда останется в очереди  позволяет легко организовать группу программ англ намёк на англ сопрограмма для получения сообщений из некоторого канала такой подход известен как пул потоков В  при проектировании которого уделялось особое внимание детерминизму и времени задержки англ реализация рабочего пула возможна но требует дополнительных усилий Множественные отправители тривиально реализуются в обоих языках процесс может послать сообщение и ждать на него ответ соответствующий некоторому образцу игнорируя другие сообщения в очереди В  такое невозможно но подобная функциональность может быть достигнута созданием в том числе динамическим новых вводов то есть разделением каналов по назначению  требует явного указания того какие программы будут взаимодействовать с другими передачей сообщений тогда как в  отсутствует разделяемое между процессами изменяемое состояние англ   и поэтому изолированный процесс очень редко представляет интересАбстракции взаимодействующих процессов достаточно похожи в  и  однако во избежание ошибок при переходе с одного языка на другой следует учитывать нюансы шаблоны которые хороши в одном языке могут не подходить для другогоКритикаправить  править кодКак и любой язык программирования  не свободен от недостатков К погрешностям синтаксиса можно отнести зависимость от символа окончания выражения от контекста это может быть   или  что требует дополнительного внимания при перемене выражений местами излишнюю многословность записей тип записи приходится упоминать при каждом доступе к члену записи необходимость полного перечисления альтернатив в выражении во избежание выбрасывания исключения если ни одно из условий не выполнено К недостаткам можно отнести строго ограниченный набор функций которые можно использовать в выражениях этот недостаток можно обойти использованием выражений Функциональный стиль и неизменяемые переменные приводят в некоторых приложениях например тесты к большему количеству правок чем в других языках программирования так как вставка некоторой промежуточной обработки может потребовать новых имён переменных что может привести к изменениям в коде следующем далее по тексту Из недостатков системы типов можно указать отсутствие строкового типа а также невозможность динамически добавлять в записи новые члены Есть проблемы и с организацией исходного кода которая возможна только через создание нового файла а также отсутствие пространств имён классов или других средств для организации кода Уровень качества модулей за исключением основных и документации оставляет желать лучшегоОдин из создателей языка Джо Армстронг в своём выступлении на конференции по истории языков программирования в  году перечислил список областей в которых  можно было бы улучшитьИспользование сборки мусора для атомовУлучшение средств сопряжения со внешним кодом англ Усиление изоляции между процессамиБолее избирательная система безопасности среди узлов  основанная на различной степени доверияОтдельные обозначения для протоколов и системМодули должны быть объектами первого классаМассовое распространение  может сдерживать необычный для большинства программистов синтаксис использование функциональной парадигмы а также то что наилучшая на  год реализация языка использует виртуальную машину  а не более распространённую Сфера примененияправить  править код Типичная архитектура системы использующей  Приложения  пользуются службами   агентами мониторинга и другими на базе фреймворка  который в свою очередь использует  Программы других систем программирования поддерживаются в меньшей степениВ силу своих особенностей  и существующих библиотек модулей  подходит для создания сетевых серверов распределённых систем программ с  и подобных им интерактивных программ инструментов для тестирования управления и слежения в общем приложений с нерегулярным параллелизмом в которых распараллеливаемые задачи достаточно разнообразны  не особенно хорош для написания кода содержащего интенсивные вычисления с плавающей запятой требующего включения нативного кода конкретной платформы или сильной оптимизации а также для создания приложений требующих синхронного параллельного выполнения задач Не подходит  и для проектов в которых код должен исполняться на  или  или проектов требующих множества библиотек из других систем программированияМожно сказать что  стал применяться для разработки облачных систем ещё до того как сформировалось само понятие облачных вычислений Язык  используется в масштабных телекоммуникационных и Интернетприложениях многими компаниями включая   с реализацией  сервис социальных закладок   бэкенд для чата  сервис  и системы аутентификации Серверное программное обеспечение  написано на  В январе  года серверы  под  с  ГБ оперативной памяти смогли обрабатывать от  до  миллионов соединений часто ставят в заслугу легендарную надёжность коммутатора  полтора миллиона строк кода на  полмиллиона на  в сети   По данным  с момента установки в январе  года за несколько лет случилась только одна незначительная неполадка на основании чего надёжность системы по расчётам составила  Хотя более реальные оценки учитывающие многие другие факторы говорят всётаки о пяти девятках успех маршрутизатора связывают с легкодоступными средствами разработки надёжных параллельных вычислений встроенными в Используется  и в приложениях с открытым исходным кодом среди которых  документоориентированная база данных с интерфейсом  фреймворк для распределённых вычислений на основе парадигмы   свободный   распределённый и устойчивый к отказам сервер написанный в основном на   платформа ориентированная на обработку сообщений реализует     программа моделирования и другиеДля  были написаны несколько вебсерверов  англ     а также  библиотека для создания серверов Кроме того были созданы несколько вебфреймворков и систем управления содержимым таких как      а также более не разрабатываемые активно    Среди другого известного программного обеспечения выполненного на  можно выделить распределённую  базу данных  спроектированную по принципам    ранее известный как  видеостриминговый сервер поддерживающий несколько протоколов Для стресстестирования распределённых систем можно применять также распределённый написанный на  инструмент  который позволяет эмулировать тысячи при достаточном количестве тестовых серверов миллионы одновременных пользователей практически идеально подходят для задач искусственного интеллекта особенно вычислительного интеллекта нейроэволюции основанных на нейронных сетях Подобное применение возможно благодаря имеющимся у  пяти ключевым свойствам языка программирования нейронных сетей изолированные процессынейроны англ параллелизм англ одновременность механизм обнаружения сбоев независимость от местоположения англ  и горячая замена кода Примером такого применения является реализация одного из подходов к нейроэволюции Сообществоправить  править кодВокруг технологий  образовалось сообщество разработчиков не отказывающее в поддержке новичкам Исходный код  доступен через сервис совместной разработки  Разработчики и пользователи  могут общаться через список рассылки  вопросы по  или на канале  на     устраивает по всему миру мероприятия и конференции среди которых конференция пользователей     Специальная группа   регулярно проводит мастерскую   а конференция  включает секцию по Примечанияправить  править код Сайт проекта    неопр    Вариант с  употребляется редко Флаг  можно установить с помощью функции  Правильно сформированная структура данных любого типа называется термомИсточники                       Чезарини Томпсон  с                  Чезарини Томпсон  с    Знакомьтесь                                    Чезарини Томпсон  с                    Чезарини Томпсон  с              неопр         Чезарини Томпсон  с         неопр мая  Чезарини Томпсон  с          с  Чезарини Томпсон  с     Чезарини Томпсон  с  Чезарини Томпсон  с      с  Чезарини Томпсон  с     Чезарини Томпсон  с  Чезарини Томпсон  с  Чезарини Томпсон  с                     англ     Архивировано октября года         Чезарини Томпсон  с        Чезарини Томпсон  с       англ     Дата обращения  декабря          Чезарини Томпсон  с      с  Чезарини Томпсон  с  Чезарини Томпсон  с    Чезарини Томпсон  с  Чезарини Томпсон  с  Чезарини Томпсон  с        Чезарини Томпсон  с  Чезарини Томпсон  с      с      с  Чезарини Томпсон  с  Чезарини Томпсон  с        с                   англ     Дата обращения  декабря  Чезарини Томпсон  с                    англ     Дата обращения  декабря  Чезарини Томпсон  с  Чезарини Томпсон  с  Чезарини Томпсон  с    Чезарини Томпсон  с    Чезарини Томпсон  с      Чезарини Томпсон  с        Чезарини Томпсон  с  Чезарини Томпсон  с  Душкин Р Функциональное программирование на языке  ДМКПресс  С с       с      с      с  Чезарини Томпсон  с  Чезарини Томпсон  с  Чезарини Томпсон  с      с      с  Чезарини Томпсон  с  Чезарини Томпсон  с            англ     Дата обращения  декабря  Чезарини Томпсон  с  Чезарини Томпсон  с      с     Чезарини Томпсон  с      с  Чезарини Томпсон  с    Чезарини Томпсон  с           с          Чезарини Томпсон  с  Чезарини Томпсон  с  Чезарини Томпсон  с      Чезарини Томпсон  с  Чезарини Томпсон  с  Чезарини Томпсон  с  Чезарини Томпсон  с  Чезарини Томпсон  с        Чезарини Томпсон  с         англ     Дата обращения  декабря          англ     Дата обращения  декабря       англ     Дата обращения  декабря  Чезарини Томпсон  с      с  Чезарини Томпсон  с  Чезарини Томпсон  с  Чезарини Томпсон  с        с    Чезарини Томпсон  с       англ     Чезарини Томпсон  с      с                   с      с           неопр    Чезарини Томпсон  с    Чезарини Томпсон  с      Чезарини Томпсон  с  Чезарини Томпсон  с  Чезарини Томпсон  с      с     Чезарини Томпсон  с  Чезарини Томпсон  с  Чезарини Томпсон  с      англ    Дата обращения  декабря        с         англ  Дата обращения  декабря    англ Дата обращения  декабря                   англ     Дата обращения  декабря    англ     Дата обращения  декабря        Чезарини Томпсон  с                      англ       Дата обращения  декабря      создатель     англ                          Ной Гифт Работа с большими объемами данных в облаке с помощью неопр   марта  Дата обращения  декабря    Чезарини Томпсон  с                               Чезарини Томпсон  с   страница проектанеопр Дата обращения  декабря       неопр              англ    Дата обращения  декабря  Выпущен новый вебфреймворк  на языке неопр   Дата обращения  декабря          с    мультипротокольный видеостриминговый сервернеопр                                     с Литератураправить  править кодна русском языкеЧезарини Ф Томпсон С Программирование в     М ДМК Пресс  с  Хеберт Ф Изучай  во имя добра         М ДМК Пресс  с  Чезарини Ф Виноски С Проектирования масштабируемых систем в        ДМК Пресс  с  на английском языке                                                                                                                                                                                     Статьиправить  править кодДмитрий Васильев Знакомьтесь  Системный администратор       англ                                          Проверено      англ                                англ                          англ                         англ              Пол Крил Функциональное программирование друг параллелизма Открытые системы   Начала работы с             Архивировано апреля года                                            Проверено Ссылкиправить  править кодОфициальный сайт  англ  англДмитрий Васильев Язык программирования неопрАндрей Зубинский  Знакомство не по правиламнеопр  Компьютерное Обозрение июля      англ англ онлайнинтерпретатор языка      англ    Слайды с   в   март Языки программированияХронологияАдаАссемблер      Категория Сравнение Списки хронологическийпо категориямЭта статья входит в число хороших статей русскоязычного раздела ВикипедииИсточник  Категории Языки программирования по алфавитуЯзыки программирования появившиеся в  годуФункциональные языки программированияДекларативные языки программированияЯзыки с динамической типизациейСвободные компиляторы и интерпретаторыЯзыки параллельного программированияСкрытые категории ВикипедияСтатьи с некорректным использованием шаблонов  не указан языкВикипедияСтатьи с некорректным использованием шаблонов  указан неверный параметрСтраницы использующие волшебные ссылки ВикипедияСтатьи с источниками из ВикиданныхПРОИТСтатьи по алфавитуПРОИТПоследняя правка в текущем месяцеВикипедияХорошие статьиВикипедияХорошие статьи по алфавитуНавигацияПерсональные инструментыВы не представились системеОбсуждениеВкладСоздать учётную записьВойтиПространства имёнСтатьяОбсуждениеВариантыПросмотрыЧитатьПравитьПравить кодИсторияЕщёПоиск    Навигация    Заглавная страницаРубрикацияУказатель АЯИзбранные статьиСлучайная статьяТекущие события    Участие    Сообщить обошибкеСообществоФорумСвежие правкиНовые страницыСправкаПожертвовать    Инструменты    Ссылки сюдаСвязанные правкиСлужебные страницыПостоянная ссылкаСведения остраницеЭлемент ВикиданныхЦитировать страницу    В других проектах    Викисклад    Печатьэкспорт    Создать книгуСкачать как Версия для печати    На других языках    Български ТоикУкранська Править ссылки Эта страница в последний раз была отредактирована  апреля  в Текст доступен по лицензии    в отдельных случаях могут действовать дополнительные условияПодробнее см Условия использования зарегистрированный товарный знак некоммерческой организации   Политика конфиденциальностиОписание ВикипедииОтказ от ответственностиСвяжитесь с намиРазработчикиСтатистикаЗаявление о кукиМобильная версия                  ШаблонКарточкаязыкапрограммирования          ШаблонКарточка        Шаблон          ШаблонПримечания         Шаблон          Шаблон         Шаблонтекст          Шаблон           ШаблонСтатья                                                                                                                                                                                                            