Алгоритм Шрайера  Симса  ВикипедияянварьфевральмартапрельмайиюньиюльавгустсентябрьоктябрьноябрьдекабрьАлгоритмШрайераСимсаАлгоритм Шрайера  СимсаВикипедияСтатьи с переопределением значения из ВикиданныхВикипедияХорошие статьи по математикеВикипедияХорошие статьи по алфавитуСтраницы использующие волшебные ссылки Вычислительная теория группАлгоритмыАлгоритмШрайераСимсарусскийАлгоритм Шрайера  СимсаМатериал из Википедии  свободной энциклопедииЭто стабильная версия отпатрулированная  марта СостояниеотпатрулированаПерейти к навигацииПерейти к поискуАлгоритм Шрайера  Симса Граф Кэли группы   Назван в честьЧарльз Симс и Отто ШрайерАвторЧарльз СимсПредназначениеОпределение порядка группы перестановокСтруктура данныхПерестановкиХудшее время Алгоритм Шрайера Симса алгоритм из области вычислительной теории групп позволяющий после однократного исполнения за линейное время находить порядок группы порождённой перестановками проверять принадлежность элемента такой группе и перечислять её элементы Алгоритм был предложен Чарльзом Симсом в  году для поиска примитивных групп перестановок и основывается на лемме Шрайера о порождении подгрупп Представление группы перестановок которое находит алгоритм аналогично ступенчатому виду матрицы для её пространства строк Разработанные Симсом методы лежат в основе большинства современных алгоритмов для работы с группами перестановок модификации алгоритма также используются в современных системах компьютерной алгебры таких как  и  Одним из наиболее наглядных приложений алгоритма является то что он может быть использован для решения кубика РубикаСодержание История Основная идея Постановка задачи Применения Алгоритм Факторизация группы Вычисление порядка и перечисление элементов Орбиты и стабилизаторы Проверка принадлежности Вычисление орбиты Лемма Шрайера Просеивание генераторов Алгоритм Время работы алгоритма Вариации алгоритма Псевдолинейные версии Вероятностная версия Примечания ЛитератураИсторияправить  править код Чарльз СимсОдной из основных задач в теории групп перестановок является поиск групп перестановок заданной степени то есть минимального числа элементов множества в группу перестановок которого вкладывается заданная группа перестановок К  году для степеней от  до  были найдены все группы перестановок для степеней от  до  были найдены все транзитивные группы то есть подгруппы действующие на порождающем множестве транзитивно а для степеней от  до  были найдены только примитивные группы перестановок Для поиска примитивных групп большей степени Чарльз Симс разработал программу которая находит порядок и некоторую структуру в группе перестановок заданной своим порождающим множествомОригинальная программа упомянутая в работе Симса была написана для   в Ратгерском университете и поддерживала работу с любыми группами чья степень не превосходила  Точная оценка времени работы алгоритма была впервые проведена Фурстом Хопкрофтом и Лаксом в  году Время работы было улучшено Джеррумом в  и Дональдом Кнутом в  году В  году была разработана эффективная вероятностная версия алгоритма Различные вариации алгоритма включая те которые используют вектор Шрайера вместо дерева орбиты были разобраны Шерешем в  годуВ вычислительной теории групп алгоритмы над группами перестановок одна из наиболее развитых областей и даже сегодня большинство из этих алгоритмов основываются на методах разработанных СимсомОсновная идеяправить  править кодЭффективность вычислений с группой перестановок существенно зависит от того как она задана в программе Один из эффективных способов такого задания выделить ряд её подгрупп и выбрать однозначных представителей смежных классов для каждой подгруппы в этом ряду относительно её предшественника Предложенный Чарльзом Симсом алгоритм находит ряд подгрупп в котором каждая следующая группа является стабилизатором предыдущей Последовательность точек для которых строятся стабилизаторы называется базой а множество содержащее образующие элементы для каждой группы в ряду сильным порождающим множествомАлгоритм строит базу и сильное порождающее множество для подгруппы перестановок заданной своим порождающим множеством используя лемму Шрайера для нахождения порождающих множеств Размер получаемых на промежуточных шагах множеств растёт экспоненциально поэтому были разработаны вариации алгоритма уменьшающие количество рассматриваемых порождающих элементовОписанное выше представление разбивает группу в произведение вложенных в неё подмножеств аналогично тому как ступенчатое представление разбивает векторное пространство в прямую сумму вложенных в него подпространствПостановка задачиправить  править кодСимметрической группой   называют группу элементами которой являются перестановки элементов некоторого множества    Обычно в качестве такого множества берётся     В таких обозначениях элементы группы можно рассматривать как отображения       переводящие множество    в себя то есть его автоморфизмы Соответственно групповой операцией является композиция перестановок которая перестановкам    и    ставит в соответствие перестановку      такую что        для всех элементов      Соответственно единичной перестановкой будет перестановка    такая что      а обратная перестановка может быть задана как      Пусть     множество перестановок длины   Порождённой подгруппой множества   называют наименьшую по включению подгруппу     которая содержит   как подмножество или что эквивалентно подгруппу всех элементов   которые могут быть представлены в виде конечного произведения элементов   и обратных к ним Порядком группы перестановок   называют число элементов в ней   а её степенью мощность множества    на котором она действует В таких обозначениях алгоритм должен уметьПолучать порядок     подгруппы порождённой данными перестановкамиПо перестановке   проверять лежит ли она в порождённой подгруппе    Последовательно перечислять элементы порождённой подгруппы без повторенийПримененияправить  править кодМодификации алгоритма реализованы в двух наиболее популярных специализированных на вычислительной теории групп системах компьютерной алгебры  и  Инструменты для работы с группами перестановок включая алгоритмы перечисления смежных классов и алгоритм Шрайера Симса также представлены в популярных системах более широкого профиля  и  Изначально алгоритм был разработан для поиска примитивных групп перестановок заданной степени однако впоследствии область его применения многократно выросла например с помощью данного алгоритма можно находить решения к заданной конфигурации кубика Рубика так как его вращения образуют группу Также алгоритм хорошо показал себя при работе с группами матрицАлгоритмправить  править кодФакторизация группыправить  править кодПусть   подгруппа некоторой конечной группы   через   обозначим трансверсаль семейства левых смежных классов    Любой элемент    может быть единственным образом представлен как   где    и    Последовательно применяя этот результат к   и её подгруппам его можно обобщить в следующем видеПусть        ряд подгрупп   Тогда любой элемент    может быть единственным образом представлен как    где      Вычисление порядка и перечисление элементовправить  править кодОписанное выше представление обладает такими свойствамиПо теореме Лагранжа порядок группы может быть вычислен по формуле      Элементы группы можно перечислить перебирая все возможные представления   Чтобы также иметь возможность проверять элементы на принадлежность порождённой подгруппе нужно рассматривать ряды подгрупп особого вида а именно составленные из стабилизаторовОрбиты и стабилизаторыправить  править кодПусть   действует на множестве    Выберем набор элементов        и построим ряд подгрупп так чтобы выполнялось    где      стабилизатор элемента    Другими словами   это подгруппа элементов   которые переводят каждый из элементов      в себя При таком подходе на каждом следующем шаге часть множества    на которую нетривиально действует очередная подгруппа   будет уменьшаться на один элемент а порядок подгруппы с которой ведётся работа хотя бы в два раза Из этого следует что понадобится     итераций алгоритма прежде чем будет найдено искомое разбиениеДля построения смежных классов нужно воспользоваться тем что существует взаимнооднозначное соответствие биекция между элементами орбиты    и левыми смежными классами    стабилизатора   ДоказательствоПо теореме об орбитах и стабилизаторах множество смежных классов    и орбита    равномощны Сопоставим каждому элементу     элемент орбиты    Пусть     тогда и множества     и     совпадают Но из этого следует что также совпадают    и               Каждому смежному классу был поставлен в соответствие ровно один элемент орбиты В силу того что смежные классы покрывают всю группу   все сопоставленные элементы различны Значит это действительно биекцияИз доказательства следует что в качестве представителей смежных классов можно брать элементы реализующие различные точки орбиты   Проверка принадлежностиправить  править кодОбозначим через    такой элемент    что     Разбиение в ряд стабилизаторов позволит проверять элемент на принадлежность группеЕсли    то найдётся элемент    такой что    то есть   В силу биекции между элементами смежного класса и точками орбиты можно однозначно определить что    Эти свойства позволяют сделать переход от   к   что в итоге приведёт к тому что текущий элемент должен лежать в   Если это действительно так то    откуда можно выразить   Вычисление орбитыправить  править кодПусть у группы   есть порождающее множество   Орбиту любого элемента    под действием группы     можно организовать в дерево следующего видаВ корне дерева записан некоторый элемент     В каждой вершине дерева записан некоторый элемент      из орбиты элемента   На ребре ведущем из вершины с элементом   в вершину с элементом   записан элемент    такой что  Описанное дерево можно построить обходом в глубину для этого нужно в каждой вершине   перебирать элемент    пока не окажется что для   ещё не была выделена вершина Пример реализации на языке  Строит дерево орбиты по заданному элементу  и порождающему множеству                                                    Здесь функция    возвращает результат применения групповой операции к элементам   и   в качестве первого и второго аргумента а в     хранится элемент    Лемма Шрайераправить  править кодОсновная статья Лемма ШрайераИз леммы Шрайера следует что стабилизатор    порождается множеством генераторов Шрайера            Этот результат позволяет по порождающему множеству для   и орбите элемента    построить порождающее множество для    Возможная реализация для функции возвращающей новое порождающее множество  Принимает порождающее множество для  и орбиту элемента  Возвращает порождающее множество для                                                     Этим алгоритм не исчерпывается так как хотя размер нового порождающего множества и зависит полиномиально от размера орбиты и старого порождающего множества для одного отдельного вызова в совокупности по всем вызовам данной функции размер порождающего множества растёт экспоненциальноПросеивание генераторовправить  править кодЧтобы избежать неконтролируемого роста порождающих множеств необходимо применять процедуру просеивания Для этого потребуется следующее утверждениеПусть    Тогда можно построить набор   из не более чем      элементов такой что      ДоказательствоДля начала докажем следующую леммуПусть    Тогда следующие преобразования не меняют    Замена    на  Замена    на   где    и   ДоказательствоПусть после применения одной из этих операций мы получили множество   Очевидно что      С другой стороны эти преобразования могут быть обращены преобразованиями того же типа поэтому      Значит      С помощью таких преобразований мы можем привести множество   к такому виду что для любой пары   в наборе есть не более одного элемента   такого что               Этого можно добиться добавляя элементы в новое множество   по одному и действуя аналогично методу ГауссаПусть мы хотим добавить в   новый элемент  Будем идти по      последовательноЕсли     то переходим к   Если     то проверяем встречался ли уже элемент   с такой парой  Если встречался то заменим   на   и перейдём к   Иначе запомним что   соответствует паре   и добавим   в текущем виде в  Если к концу алгоритма мы имеем   то игнорируем   и не меняем  Данный алгоритм использует только обозначенные выше элементарные операции поэтому       Заметим что если     то     поэтому переход к    от   в алгоритме является корректным и каждой паре   действительно соответствует не больше одной перестановки Учитывая что всего таких пар не больше   получаем требуемое утверждениеОписанная в доказательстве процедура называется фильтром Симса и работает за     Её реализация может выглядеть так Принимает порождающее множество  Возвращает прореженное порождающее множество                                                                                                                                                                                       Помимо фильтра Симса для поиска небольшого набора   может использоваться фильтр Джеррума В отличие от фильтра Симса который находит набор из не более чем    элементов фильтр Джеррума находит набор из не более чем    элементов В то же время фильтр Джеррума работает за     поэтому в случае алгоритма Шрайера Симса предпочтительнее использовать именно фильтр СимсаАлгоритмправить  править кодВсё вышенаписанное вместе даёт алгоритм который может быть лаконично реализован следующим образом Принимает порождающее множество      Возвращает трансверсали смежных классов                                                                                                                 По шагам его действия имеют следующий смыслСтроится орбита элемента    поиском в глубинуВычисляются все генераторы Шрайера для  Множество генераторов прореживается чтобы избежать их экспоненциального ростаНа выходе алгоритм вернёт список элементами которого являются трансверсали смежных классов   Время работы алгоритмаправить  править кодВсего алгоритм требует не больше    итераций Каждая итерация состоит изПостроения дерева орбиты которое занимает     элементарных операцийПостроения генераторов Шрайера которое занимает     элементарных операций и возвращает     генераторовНормализации порождающего множества которое занимает     элементарных операций где   множество полученное на прошлом шагеВеличина    в случае когда дан набор     на протяжении алгоритма не меняется и равна   Размер порождающего множество изначально равен   а на каждом последующем шаге не превышает    Таким образом общее время работы алгоритма в приведённой реализации можно оценить как  Вариации алгоритмаправить  править кодПсевдолинейные версииправить  править кодРанее было показано что алгоритм требует     итераций В общем случае размер группы может быть порядка   и в таком случае по формуле Стирлинга      что заведомо больше    Но в некоторых случаях порядок группы небольшой в связи с чем выгоднее иметь алгоритм который зависит от    а не   например когда речь идёт о какойто известной группе которая задана как группа перестановокПо теореме Кэли любая конечная группа изоморфна некоторой группе перестановок Степень такой группы   может быть большой но для многих групп их порядок   таков что    Например диэдральная группа   изоморфна группе перестановок порождённой циклическим сдвигом    и отражением    То есть степень данной группы равна   а порядок   и      Для таких групп можно рассматривать алгоритмы со временем работы    которые называются псевдолинейнымиВ попытке приблизить алгоритм к псевдолинейному и снизить степень   входящую в его время работы Шереш пришёл к версиям алгоритма требующим    времени и    памяти    времени и    памятиВероятностная версияправить  править кодПервая рабочая вероятностная версия алгоритма была разработана Джефри Леоном в  году Обычно именно её имеют в виду когда говорят про вероятностный метод Шрайера Симса В нём при прореживании генераторов Шрайера данная процедура досрочно прекращалась если  генераторов подряд оказывались разложенными на множители Шереш показал что в совокупности с некоторыми оптимизациями эта процедура даёт следующее утверждениеДля любой константы   существует алгоритм типа МонтеКарло который с вероятностью ошибки не больше   построит сильное порождающее множество для группы перестановок     используя      времени и    памятиВ современных системах компьютерной алгебры обычно используются модификации данной версии алгоритма с различными эвристиками для ускорения работы программыПримечанияправить  править код    Симс        Мюррей        Холт Эйк ОБрайен     Шереш       Шереш     Брауэр          Симс     Фурст Хопкрофт Лакс  Джеррум  Кнут    Леон      Шереш     Холт Эйк ОБрайен   Журавлёв Флёров Вялый  Перестановки с  Холт Эйк ОБрайен   Мюррей ОБрайен     Мюррей     Шереш     Журавлёв Флёров Вялый  Орбиты и стабилизаторы с     Мюррей        англ      Дата обращения  сентября     англ      Дата обращения  сентября Литератураправить  править кодЮ И Журавлёв Ю А Флёров М Н Вялый Основы высшей алгебры и теории кодирования ФУПМ МФТИ  С с          англ                      англ                   англ                 англ             англ         англ             англ                   англ                                 англ                          англ             Теория группОсновные понятияПодгруппаНормальная подгруппаФакторгруппаПроизведениеПрямоеПолупрямоеАлгебраические свойстваКоммутативная группаЦиклическая группаУпорядоченная группаГруппа преобразованийРазрешимая группаЛемма ШрайераТеорема ЛагранжаТеоремы СиловаКлассификация простых конечных группКонечные группыКонечная циклическая группа Симметрическая группа Диэдрическая группа Знакопеременная группа Четверная группа КлейнаГруппы МатьёГруппы КонвеяГруппы ЯнкоГруппы ФишераМонстр МТопологические группыГруппы ЛиОртогональная группа Специальная ортогональная группа Унитарная группа Специальная унитарная группа Симплектическая группа Исключительные простыеГруппа ЛоренцаГруппа ПуанкареАлгоритмы на группахШрайера СимсаТодда КоксетераЭта статья входит в число хороших статей русскоязычного раздела ВикипедииИсточник  АлгоритмШрайераСимсаКатегории Вычислительная теория группАлгоритмыСкрытые категории ВикипедияСтатьи с переопределением значения из ВикиданныхВикипедияХорошие статьи по математикеВикипедияХорошие статьи по алфавитуСтраницы использующие волшебные ссылки НавигацияПерсональные инструментыВы не представились системеОбсуждениеВкладСоздать учётную записьВойтиПространства имёнСтатьяОбсуждениеВариантыПросмотрыЧитатьПравитьПравить кодИсторияЕщёПоиск    Навигация    Заглавная страницаРубрикацияУказатель АЯИзбранные статьиСлучайная статьяТекущие события    Участие    Сообщить обошибкеСообществоФорумСвежие правкиНовые страницыСправкаПожертвовать    Инструменты    Ссылки сюдаСвязанные правкиСлужебные страницыПостоянная ссылкаСведения остраницеЭлемент ВикиданныхЦитировать страницу    Печатьэкспорт    Создать книгуСкачать как Версия для печати    На других языках    Править ссылки Эта страница в последний раз была отредактирована  марта  в Текст доступен по лицензии    в отдельных случаях могут действовать дополнительные условияПодробнее см Условия использования зарегистрированный товарный знак некоммерческой организации   Политика конфиденциальностиОписание ВикипедииОтказ от ответственностиСвяжитесь с намиРазработчикиСтатистикаЗаявление о кукиМобильная версия                 Шаблон          ШаблонАлгоритм          ШаблонКарточка           ШаблонСтатья            ШаблонПримечания            ШаблонХорошаястатья           Шаблонтекст            Шаблон            Шаблон                                             